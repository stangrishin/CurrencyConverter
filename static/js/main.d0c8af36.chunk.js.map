{"version":3,"sources":["Components/Button/index.jsx","Components/PieceOfExchange/index.jsx","redux/types/currency.js","redux/actions/currency.js","App.js","redux/initState.js","redux/reducers/currencyReducer.js","redux/store.js","index.js"],"names":["Button","handleSwitchCurrency","IconButton","onClick","PieceOfExchange","initOrDest","handleValueChange","handleCurrChange","state","useSelector","TextField","name","variant","type","placeholder","value","Math","floor","onChange","Select","allTheCurrencies","map","currency","MenuItem","CHANGE_INIT_VALUE","CHANGE_DEST_VALUE","CHANGE_INIT_CURR","CHANGE_DEST_CURR","CHANGE_RATE","change_init_curr","newInitCurr","TYPES","payload","change_dest_curr","newDestCurr","get_rates_thunk","dispatch","getState","a","initCurr","destCurr","fetch","response","json","rates","Object","keys","App","useDispatch","useEffect","event","newDestValue","newInitValue","target","Grid","container","spacing","direction","alignItems","justify","style","minHeight","item","xs","Container","maxWidth","initState","rate","initValue","destValue","currencyReducer","action","newRate","allCurrencies","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0c8af36.chunk.js","sourcesContent":["import { IconButton } from '@material-ui/core';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport React from 'react';\n\nfunction Button({handleSwitchCurrency}) {\n\n  return (\n    <IconButton onClick={handleSwitchCurrency}>\n      <AutorenewIcon /> Switch Currencies\n    </IconButton>\n  );\n}\n\nexport default Button;\n","import React from 'react';\nimport { MenuItem, Select, TextField } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nfunction PieceOfExchange({ initOrDest, handleValueChange, handleCurrChange }) {\n  const state = useSelector((state) => state);\n\n  return (\n    <div>\n      <TextField\n        name={`${initOrDest}ValueInput`}\n        variant='outlined'\n        type='number'\n        placeholder='Value here'\n        value={\n          state[`${initOrDest}Value`] === ''\n            ? ''\n            : Math.floor(state[`${initOrDest}Value`] * 1000) / 1000\n        }\n        onChange={handleValueChange}\n      />\n      <Select\n        name={`${initOrDest}CurrInput`}\n        variant='outlined'\n        value={state[`${initOrDest}Curr`]}\n        onChange={handleCurrChange}\n      >\n        {state.allTheCurrencies.map((currency) => (\n          <MenuItem key={currency} value={currency}>\n            {currency}\n          </MenuItem>\n        ))}\n      </Select>\n    </div>\n  );\n}\nexport default PieceOfExchange;\n","export const CHANGE_INIT_VALUE = 'CHANGE_INIT_VALUE';\nexport const CHANGE_DEST_VALUE = 'CHANGE_DEST_VALUE';\nexport const CHANGE_INIT_CURR = 'CHANGE_INIT_CURR';\nexport const CHANGE_DEST_CURR = 'CHANGE_DEST_CURR';\nexport const CHANGE_RATE = 'CHANGE_RATE';\n","import * as TYPES from '../types/currency'\n\nexport const change_init_value = (newInitValue)=>({\n  type: TYPES.CHANGE_INIT_VALUE,\n  payload: newInitValue\n})\n\nexport const change_dest_value = (newDestValue)=>({\n  type: TYPES.CHANGE_DEST_VALUE,\n  payload: newDestValue\n})\n\nexport const change_init_curr = (newInitCurr)=>({\n  type: TYPES.CHANGE_INIT_CURR,\n  payload: newInitCurr\n})\n\nexport const change_dest_curr = (newDestCurr)=>({\n  type: TYPES.CHANGE_DEST_CURR,\n  payload: newDestCurr\n})\n\nexport const get_rates_thunk = () => async (dispatch, getState) => {\n  const {initCurr, destCurr} = getState()\n  const response = await fetch(`https://api.exchangeratesapi.io/latest?base=${initCurr}`)\n  const rates = await response.json()\n  dispatch({type:TYPES.CHANGE_RATE,payload:[rates.rates[destCurr],Object.keys(rates.rates)]})\n}\n","import { useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Button from './Components/Button';\nimport PieceOfExchange from './Components/PieceOfExchange';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  change_init_value,\n  change_dest_value,\n  change_init_curr,\n  change_dest_curr,\n  get_rates_thunk,\n} from './redux/actions/currency';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const {initCurr, destCurr} = useSelector((state) => state);\n\n  useEffect(() => {\n    dispatch(get_rates_thunk());\n  }, [initCurr, destCurr]);\n\n  const handleSwitchCurrency = () => {\n    dispatch(change_init_curr(destCurr));\n    dispatch(change_dest_curr(initCurr));\n    dispatch(get_rates_thunk());\n  };\n\n  const handleValueChange = (event) => {\n    if (event.target.name === 'initValueInput') {\n      dispatch(change_init_value(event.target.value));\n    } else {\n      dispatch(change_dest_value(event.target.value));\n    }\n  };\n  const handleCurrChange = (event) => {\n    if (event.target.name === 'initCurrInput') {\n      dispatch(change_init_curr(event.target.value));\n    } else {\n      dispatch(change_dest_curr(event.target.value));\n    }\n  };\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction='column'\n      alignItems='center'\n      justify='center'\n      style={{ minHeight: '100vh' }}\n    >\n      <Grid item xs={6}>\n        <Container maxWidth='sm'>\n          <PieceOfExchange\n            initOrDest={'init'}\n            handleValueChange={handleValueChange}\n            handleCurrChange={handleCurrChange}\n          />\n          <Button handleSwitchCurrency={handleSwitchCurrency}/>\n          <PieceOfExchange\n            initOrDest={'dest'}\n            handleValueChange={handleValueChange}\n            handleCurrChange={handleCurrChange}\n          />\n        </Container>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default App;\n","const initState = {\n  initCurr: 'USD',\n  destCurr: 'RUB',\n  rate: 10,\n  initValue: 1,\n  destValue: 1,\n  allTheCurrencies: ['USD', 'EUR', 'RUB', 'NOK'],\n};\n\nexport default initState;\n","import * as TYPES from '../types/currency';\n\nfunction currencyReducer(state = {}, action) {\n  switch (action.type) {\n    case TYPES.CHANGE_INIT_VALUE:\n      return {\n        ...state,\n        initValue: action.payload,\n        destValue: action.payload * state.rate,\n      };\n    case TYPES.CHANGE_DEST_VALUE:\n      return {\n        ...state,\n        destValue: action.payload,\n        initValue: action.payload / state.rate,\n      };\n    case TYPES.CHANGE_INIT_CURR:\n      return {\n        ...state,\n        initCurr: action.payload,\n      };\n    case TYPES.CHANGE_DEST_CURR:\n      return {\n        ...state,\n        destCurr: action.payload,\n      };\n      case TYPES.CHANGE_RATE:\n        const [newRate, allCurrencies]=action.payload\n      return {\n        ...state,\n        rate: newRate,\n        destValue:state.initValue*newRate,\n        allTheCurrencies:allCurrencies\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default currencyReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport initState from './initState';\nimport currencyReducer from './reducers/currencyReducer';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n  currencyReducer,\n  initState,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}